@model MvcBlog.Domain.Entities.Post

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!--Initialize TinyMCE wysiwyg redactor (do not use bundle)-->
<script src="~/Scripts/tinymce/tinymce.min.js"></script>
<script type="text/javascript">
    tinymce.init({
        selector: "textarea",
        toolbar: "undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
    });

</script>

@using (Html.BeginForm("EditPost", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="editor-container">

        @Html.AntiForgeryToken()
        @Html.ValidationSummary()

        @if (@Model.PostID != 0)
        {   //show if we are editing post
            @Html.LabelFor(p => p.PostID, new { @class = "control-label" })
            <div class="text-disabled">
                @Html.EditorFor(p => p.PostID)
            </div>

            @Html.LabelFor(p => p.PostCreatedBy, new { @class = "control-label" })
            <div class="text-disabled">
                @Html.EditorFor(p => p.PostCreatedBy)
            </div>

            @Html.LabelFor(p => p.PostCreationDate, new { @class = "control-label" })
            <div class="text-disabled">
                @Html.EditorFor(p => p.PostCreationDate)
            </div>

            @Html.LabelFor(p => p.PostLastModifiedBy, new { @class = "control-label" })
            <div class="text-disabled">
                @Html.EditorFor(p => p.PostLastModifiedBy)
            </div>

            @Html.LabelFor(p => p.PostLastModificationDate, new { @class = "control-label" })
            <div class="text-disabled">
                @Html.EditorFor(p => p.PostLastModificationDate)
            </div>
        }

        <div>
            @Html.LabelFor(p => p.PostTitle, new { @class = "control-label" })
            @Html.TextBoxFor(p => p.PostTitle, new { @class = "form-control" })
            @Html.ValidationMessageFor(p => p.PostTitle)
        </div>
        
        <div>
            @Html.LabelFor(p => p.PostDescription, new { @class = "control-label" })
            @Html.TextAreaFor(p => p.PostDescription, new { @class = "form-control", @rows = "5" })
            @Html.ValidationMessageFor(p => p.PostDescription)
        </div>
        
        <div>
            @Html.LabelFor(p => p.PostContent, new { @class = "control-label" })
            @Html.TextAreaFor(p => p.PostContent, new { @class = "form-control", @rows = "15" })
            @Html.ValidationMessageFor(p => p.PostContent)
        </div>
        
        <div>
            @Html.LabelFor(p => p.PostCategory, new { @class = "control-label" })
            @Html.TextBoxFor(p => p.PostCategory, new { @class = "form-control" })
            @Html.ValidationMessageFor(p => p.PostCategory)
        </div>

        <div class="checkbox">
            @Html.LabelFor(p => p.PostIsVisible)
            @Html.CheckBoxFor(p => p.PostIsVisible)
        </div>

        <div class="checkbox">
            @Html.LabelFor(p => p.PostCommentsEnabled)
            @Html.CheckBoxFor(p => p.PostCommentsEnabled)
        </div>

        <div class="checkbox">
            @Html.LabelFor(p => p.PostFeatured)
            @Html.CheckBoxFor(p => p.PostFeatured)
        </div>

        <!--Post images-->
        <label class="control-label">Post Images</label>
        <div>
            @if (Model.ImageName == null)
            {
                @:None
            }
            else
            {
                <div class="control-label">Thumbnail image:</div>
                <div class="thumb-layout">
                    <img src="@Url.Action("GetPostThumbnail", "Posts", new { Model.PostID })" />
                </div>

                <div class="control-label">Featured image:</div>
                <div class="feat-layout">
                    <img src="@Url.Action("GetPostFeatured", "Posts", new { Model.PostID })" width="798" />
                </div>
            }

            <div class="image-upload">
                Upload new image:
                <input type="file" name="postImage" />
            </div>
        </div>

        @Html.HiddenFor(p => p.ImageMimeType)
        @Html.HiddenFor(p => p.ImageName)

        <p class="pull-right">
            @Html.ActionLink("Cancel and return to list", "ManagePosts", "Admin", routeValues: null, htmlAttributes: new { @class = "btn btn-warning" })
        </p>

        <p>
            <input type="submit" value="Save" class="btn btn-success" />
        </p>
    </div>
}

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@